"""
文本清理工具
處理表情符號、特殊字符和標準化文本，確保資料庫匹配的準確性
"""

import re
import unicodedata
from typing import Optional, List, Dict, Any
import logging

logger = logging.getLogger(__name__)


class TextCleaner:
    """文本清理器 - 處理表情符號和特殊字符"""
    
    def __init__(self):
        # 常見表情符號映射
        self.emoji_mapping = {
            '😀': '[笑臉]', '😃': '[大笑]', '😄': '[開心]', '😁': '[微笑]',
            '😆': '[笑]', '😅': '[汗笑]', '😂': '[笑哭]', '🤣': '[笑翻]',
            '😊': '[害羞]', '😇': '[天使]', '🙂': '[微笑]', '🙃': '[倒笑]',
            '😉': '[眨眼]', '😌': '[放鬆]', '😍': '[愛心]', '🥰': '[愛]',
            '😘': '[飛吻]', '😗': '[親吻]', '😙': '[親]', '😚': '[親親]',
            '😋': '[好吃]', '😛': '[吐舌]', '😝': '[吐舌頭]', '😜': '[眨眼吐舌]',
            '🤪': '[瘋狂]', '🤨': '[懷疑]', '🧐': '[偵探]', '🤓': '[書呆子]',
            '😎': '[酷]', '🤩': '[星星眼]', '🥳': '[慶祝]', '😏': '[得意]',
            '😒': '[不滿]', '😞': '[失望]', '😔': '[憂鬱]', '😟': '[擔心]',
            '😕': '[困惑]', '🙁': '[不開心]', '☹️': '[難過]', '😣': '[痛苦]',
            '😖': '[煩惱]', '😫': '[疲憊]', '😩': '[累]', '🥺': '[可憐]',
            '😢': '[哭泣]', '😭': '[大哭]', '😤': '[生氣]', '😠': '[憤怒]',
            '😡': '[暴怒]', '🤬': '[罵人]', '🤯': '[爆炸]', '😳': '[震驚]',
            '🥵': '[熱]', '🥶': '[冷]', '😱': '[尖叫]', '😨': '[恐懼]',
            '😰': '[緊張]', '😥': '[擔心]', '😓': '[汗]', '🤗': '[擁抱]',
            '🤔': '[思考]', '🤭': '[偷笑]', '🤫': '[噓]', '🤥': '[說謊]',
            '😶': '[無語]', '😐': '[面無表情]', '😑': '[冷漠]', '😯': '[驚訝]',
            '😦': '[困惑]', '😧': '[痛苦]', '😮': '[驚訝]', '😲': '[震驚]',
            '😴': '[睡覺]', '🤤': '[流口水]', '😪': '[睏]', '😵': '[暈]',
            '🤐': '[閉嘴]', '🥴': '[醉]', '🤢': '[噁心]', '🤮': '[嘔吐]',
            '🤧': '[打噴嚏]', '😷': '[口罩]', '🤒': '[發燒]', '🤕': '[受傷]',
            '🤑': '[貪財]', '🤠': '[牛仔]', '👻': '[鬼]', '👽': '[外星人]',
            '🤖': '[機器人]', '😈': '[惡魔]', '👿': '[惡魔]', '👹': '[食人魔]',
            '👺': '[天狗]', '💀': '[骷髏]', '☠️': '[骷髏]', '💩': '[便便]',
            '🤡': '[小丑]', '👻': '[鬼]', '👽': '[外星人]', '🤖': '[機器人]',
            '🎃': '[南瓜]', '👾': '[外星人]', '🤖': '[機器人]', '😺': '[貓笑]',
            '😸': '[貓開心]', '😹': '[貓笑哭]', '😻': '[貓愛心]', '😼': '[貓壞笑]',
            '😽': '[貓親吻]', '🙀': '[貓驚訝]', '😿': '[貓哭泣]', '😾': '[貓生氣]',
            '🙈': '[不看]', '🙉': '[不聽]', '🙊': '[不說]', '💌': '[情書]',
            '💘': '[愛心箭]', '💝': '[禮物愛心]', '💖': '[閃亮愛心]', '💗': '[成長愛心]',
            '💓': '[跳動愛心]', '💞': '[旋轉愛心]', '💕': '[雙愛心]', '💟': '[裝飾愛心]',
            '❣️': '[感嘆愛心]', '💔': '[破碎愛心]', '❤️': '[紅心]', '🧡': '[橙心]',
            '💛': '[黃心]', '💚': '[綠心]', '💙': '[藍心]', '💜': '[紫心]',
            '🖤': '[黑心]', '🤍': '[白心]', '🤎': '[棕心]', '💯': '[100分]',
            '💢': '[憤怒]', '💥': '[爆炸]', '💫': '[星星]', '💦': '[汗]',
            '💨': '[風]', '🕳️': '[洞]', '💬': '[對話框]', '🗨️': '[對話]',
            '🗯️': '[憤怒對話]', '💭': '[思考框]', '💤': '[睡覺]', '💮': '[白花]',
            '♨️': '[溫泉]', '💈': '[理髮店]', '🛑': '[停止]', '🛢️': '[油桶]',
            '🛠️': '[工具]', '🛡️': '[盾牌]', '🛤️': '[鐵軌]', '🛥️': '[汽艇]',
            '🛩️': '[小飛機]', '🛫': '[起飛]', '🛬': '[降落]', '🛰️': '[衛星]',
            '🛳️': '[客輪]', '🛴': '[滑板車]', '🛵': '[摩托車]', '🛶': '[獨木舟]',
            '🛷': '[雪橇]', '🛸': '[飛碟]', '🛹': '[滑板]', '🛺': '[三輪車]',
            '🛻': '[皮卡]', '🛼': '[溜冰鞋]', '🟠': '[橙圓]', '🟡': '[黃圓]',
            '🟢': '[綠圓]', '🟣': '[紫圓]', '🟤': '[棕圓]', '⚫': '[黑圓]',
            '⚪': '[白圓]', '🟥': '[紅方]', '🟧': '[橙方]', '🟨': '[黃方]',
            '🟩': '[綠方]', '🟦': '[藍方]', '🟪': '[紫方]', '🟫': '[棕方]',
            '⬛': '[黑方]', '⬜': '[白方]', '◼️': '[黑方]', '◻️': '[白方]',
            '◾': '[小黑方]', '◽': '[小白方]', '▪️': '[小黑方]', '▫️': '[小白方]',
            '🔶': '[橙鑽]', '🔷': '[藍鑽]', '🔸': '[小橙鑽]', '🔹': '[小藍鑽]',
            '🔺': '[紅三角]', '🔻': '[倒紅三角]', '💠': '[鑽石]', '🔘': '[圓圈]',
            '🔳': '[白方]', '🔲': '[黑方]', '🏁': '[旗幟]', '🚩': '[紅旗]',
            '🎌': '[交叉旗]', '🏴': '[黑旗]', '🏳️': '[白旗]', '🏳️‍🌈': '[彩虹旗]',
            '🏴‍☠️': '[海盜旗]', '🇦🇨': '[Ascension島]', '🇦🇩': '[安道爾]', '🇦🇫': '[阿富汗]',
            '🇦🇬': '[安地卡及巴布達]', '🇦🇮': '[安圭拉]', '🇦🇱': '[阿爾巴尼亞]', '🇦🇲': '[亞美尼亞]',
            '🇦🇴': '[安哥拉]', '🇦🇶': '[南極洲]', '🇦🇷': '[阿根廷]', '🇦🇸': '[美屬薩摩亞]',
            '🇦🇹': '[奧地利]', '🇦🇺': '[澳洲]', '🇦🇼': '[阿魯巴]', '🇦🇽': '[奧蘭群島]',
            '🇦🇿': '[亞塞拜然]', '🇧🇦': '[波士尼亞與赫塞哥維納]', '🇧🇧': '[巴貝多]', '🇧🇩': '[孟加拉]',
            '🇧🇪': '[比利時]', '🇧🇫': '[布吉納法索]', '🇧🇬': '[保加利亞]', '🇧🇭': '[巴林]',
            '🇧🇮': '[蒲隆地]', '🇧🇯': '[貝南]', '🇧🇱': '[聖巴瑟米]', '🇧🇲': '[百慕達]',
            '🇧🇳': '[汶萊]', '🇧🇴': '[玻利維亞]', '🇧🇶': '[荷蘭加勒比區]', '🇧🇷': '[巴西]',
            '🇧🇸': '[巴哈馬]', '🇧🇹': '[不丹]', '🇧🇻': '[布韋島]', '🇧🇼': '[波札那]',
            '🇧🇾': '[白俄羅斯]', '🇧🇿': '[貝里斯]', '🇨🇦': '[加拿大]', '🇨🇨': '[科科斯群島]',
            '🇨🇩': '[中非共和國]', '🇨🇫': '[剛果共和國]', '🇨🇬': '[剛果民主共和國]', '🇨🇭': '[瑞士]',
            '🇨🇮': '[象牙海岸]', '🇨🇱': '[智利]', '🇨🇲': '[喀麥隆]', '🇨🇳': '[中國]',
            '🇨🇴': '[哥倫比亞]', '🇨🇵': '[克利珀頓島]', '🇨🇷': '[哥斯大黎加]', '🇨🇺': '[古巴]',
            '🇨🇻': '[維德角]', '🇨🇼': '[庫拉索]', '🇨🇽': '[聖誕島]', '🇨🇾': '[賽普勒斯]',
            '🇨🇿': '[捷克]', '🇩🇪': '[德國]', '🇩🇯': '[吉布地]', '🇩🇰': '[丹麥]',
            '🇩🇲': '[多米尼克]', '🇩🇴': '[多明尼加]', '🇩🇿': '[阿爾及利亞]', '🇪🇦': '[休達與梅利利亞]',
            '🇪🇨': '[厄瓜多]', '🇪🇪': '[愛沙尼亞]', '🇪🇬': '[埃及]', '🇪🇭': '[西撒哈拉]',
            '🇪🇷': '[厄利垂亞]', '🇪🇸': '[西班牙]', '🇪🇹': '[衣索比亞]', '🇪🇺': '[歐盟]',
            '🇫🇮': '[芬蘭]', '🇫🇯': '[斐濟]', '🇫🇰': '[福克蘭群島]', '🇫🇲': '[密克羅尼西亞]',
            '🇫🇴': '[法羅群島]', '🇫🇷': '[法國]', '🇬🇦': '[加彭]', '🇬🇧': '[英國]',
            '🇬🇩': '[格瑞那達]', '🇬🇪': '[喬治亞]', '🇬🇫': '[法屬圭亞那]', '🇬🇬': '[根西島]',
            '🇬🇭': '[迦納]', '🇬🇮': '[直布羅陀]', '🇬🇱': '[格陵蘭]', '🇬🇲': '[甘比亞]',
            '🇬🇳': '[幾內亞]', '🇬🇵': '[瓜德羅普]', '🇬🇶': '[赤道幾內亞]', '🇬🇷': '[希臘]',
            '🇬🇸': '[南喬治亞與南三明治群島]', '🇬🇹': '[瓜地馬拉]', '🇬🇺': '[關島]', '🇬🇼': '[幾內亞比索]',
            '🇬🇾': '[蓋亞那]', '🇭🇰': '[香港]', '🇭🇲': '[赫德島與麥當勞群島]', '🇭🇳': '[宏都拉斯]',
            '🇭🇷': '[克羅埃西亞]', '🇭🇹': '[海地]', '🇭🇺': '[匈牙利]', '🇮🇩': '[印尼]',
            '🇮🇪': '[愛爾蘭]', '🇮🇱': '[以色列]', '🇮🇲': '[曼島]', '🇮🇳': '[印度]',
            '🇮🇴': '[英屬印度洋領地]', '🇮🇶': '[伊拉克]', '🇮🇷': '[伊朗]', '🇮🇸': '[冰島]',
            '🇮🇹': '[義大利]', '🇯🇪': '[澤西島]', '🇯🇲': '[牙買加]', '🇯🇴': '[約旦]',
            '🇯🇵': '[日本]', '🇰🇪': '[肯亞]', '🇰🇬': '[吉爾吉斯]', '🇰🇭': '[柬埔寨]',
            '🇰🇮': '[吉里巴斯]', '🇰🇲': '[葛摩]', '🇰🇳': '[聖克里斯多福與尼維斯]', '🇰🇵': '[北韓]',
            '🇰🇷': '[南韓]', '🇰🇼': '[科威特]', '🇰🇾': '[開曼群島]', '🇰🇿': '[哈薩克]',
            '🇱🇦': '[寮國]', '🇱🇧': '[黎巴嫩]', '🇱🇨': '[聖露西亞]', '🇱🇮': '[列支敦斯登]',
            '🇱🇰': '[斯里蘭卡]', '🇱🇷': '[賴比瑞亞]', '🇱🇸': '[賴索托]', '🇱🇹': '[立陶宛]',
            '🇱🇺': '[盧森堡]', '🇱🇻': '[拉脫維亞]', '🇱🇾': '[利比亞]', '🇲🇦': '[摩洛哥]',
            '🇲🇨': '[摩納哥]', '🇲🇩': '[摩爾多瓦]', '🇲🇪': '[蒙特內哥羅]', '🇲🇫': '[法屬聖馬丁]',
            '🇲🇬': '[馬達加斯加]', '🇲🇭': '[馬紹爾群島]', '🇲🇰': '[北馬其頓]', '🇲🇱': '[馬利]',
            '🇲🇲': '[緬甸]', '🇲🇳': '[蒙古]', '🇲🇴': '[澳門]', '🇲🇵': '[北馬里亞納群島]',
            '🇲🇶': '[馬丁尼克]', '🇲🇷': '[茅利塔尼亞]', '🇲🇸': '[蒙特塞拉特]', '🇲🇹': '[馬爾他]',
            '🇲🇺': '[模里西斯]', '🇲🇻': '[馬爾地夫]', '🇲🇼': '[馬拉威]', '🇲🇽': '[墨西哥]',
            '🇲🇾': '[馬來西亞]', '🇲🇿': '[莫三比克]', '🇳🇦': '[納米比亞]', '🇳🇨': '[新喀里多尼亞]',
            '🇳🇪': '[尼日]', '🇳🇫': '[諾福克島]', '🇳🇬': '[奈及利亞]', '🇳🇮': '[尼加拉瓜]',
            '🇳🇱': '[荷蘭]', '🇳🇴': '[挪威]', '🇳🇵': '[尼泊爾]', '🇳🇷': '[諾魯]',
            '🇳🇺': '[紐埃]', '🇳🇿': '[紐西蘭]', '🇴🇲': '[阿曼]', '🇵🇦': '[巴拿馬]',
            '🇵🇪': '[秘魯]', '🇵🇫': '[法屬玻里尼西亞]', '🇵🇬': '[巴布亞紐幾內亞]', '🇵🇭': '[菲律賓]',
            '🇵🇰': '[巴基斯坦]', '🇵🇱': '[波蘭]', '🇵🇲': '[聖皮埃與密克隆群島]', '🇵🇳': '[皮特肯群島]',
            '🇵🇷': '[波多黎各]', '🇵🇸': '[巴勒斯坦]', '🇵🇹': '[葡萄牙]', '🇵🇼': '[帛琉]',
            '🇵🇾': '[巴拉圭]', '🇶🇦': '[卡達]', '🇷🇪': '[留尼旺]', '🇷🇴': '[羅馬尼亞]',
            '🇷🇸': '[塞爾維亞]', '🇷🇺': '[俄羅斯]', '🇷🇼': '[盧安達]', '🇸🇦': '[沙烏地阿拉伯]',
            '🇸🇧': '[所羅門群島]', '🇸🇨': '[塞席爾]', '🇸🇩': '[蘇丹]', '🇸🇪': '[瑞典]',
            '🇸🇬': '[新加坡]', '🇸🇭': '[聖赫勒拿]', '🇸🇮': '[斯洛維尼亞]', '🇸🇯': '[斯瓦爾巴與揚馬延]',
            '🇸🇰': '[斯洛伐克]', '🇸🇱': '[獅子山]', '🇸🇲': '[聖馬利諾]', '🇸🇳': '[塞內加爾]',
            '🇸🇴': '[索馬利亞]', '🇸🇷': '[蘇利南]', '🇸🇸': '[南蘇丹]', '🇸🇹': '[聖多美與普林西比]',
            '🇸🇻': '[薩爾瓦多]', '🇸🇽': '[荷屬聖馬丁]', '🇸🇾': '[敘利亞]', '🇸🇿': '[史瓦帝尼]',
            '🇹🇦': '[特里斯坦達庫尼亞]', '🇹🇨': '[土克凱可群島]', '🇹🇩': '[查德]', '🇹🇫': '[法屬南部領地]',
            '🇹🇬': '[多哥]', '🇹🇭': '[泰國]', '🇹🇯': '[塔吉克]', '🇹🇰': '[托克勞]',
            '🇹🇱': '[東帝汶]', '🇹🇲': '[土庫曼]', '🇹🇳': '[突尼西亞]', '🇹🇴': '[東加]',
            '🇹🇷': '[土耳其]', '🇹🇹': '[特立尼達與多巴哥]', '🇹🇻': '[圖瓦盧]', '🇹🇼': '[台灣]',
            '🇹🇿': '[坦尚尼亞]', '🇺🇦': '[烏克蘭]', '🇺🇬': '[烏干達]', '🇺🇲': '[美國本土外小島嶼]',
            '🇺🇳': '[聯合國]', '🇺🇸': '[美國]', '🇺🇾': '[烏拉圭]', '🇺🇿': '[烏茲別克]',
            '🇻🇦': '[梵蒂岡]', '🇻🇨': '[聖文森特與格瑞那丁斯]', '🇻🇪': '[委內瑞拉]', '🇻🇬': '[英屬維京群島]',
            '🇻🇮': '[美屬維京群島]', '🇻🇳': '[越南]', '🇻🇺': '[萬那杜]', '🇼🇫': '[瓦利斯與富圖納]',
            '🇼🇸': '[薩摩亞]', '🇾🇪': '[葉門]', '🇾🇹': '[馬約特]', '🇿🇦': '[南非]',
            '🇿🇲': '[尚比亞]', '🇿🇼': '[辛巴威]', '🏴󠁧󠁢󠁥󠁮󠁧󠁿': '[英格蘭]', '🏴󠁧󠁢󠁳󠁣󠁴󠁿': '[蘇格蘭]',
            '🏴󠁧󠁢󠁷󠁬󠁳󠁿': '[威爾斯]'
        }
        
        # 特殊字符映射
        self.special_char_mapping = {
            '®': '[註冊商標]', '©': '[版權]', '™': '[商標]', '℠': '[服務商標]',
            '℗': '[錄音版權]', '℅': '[轉交]', '№': '[編號]', '℡': '[電話]',
            '℞': '[處方]', '℟': '[回應]', '℠': '[服務商標]', '™': '[商標]',
            '℃': '[攝氏度]', '℉': '[華氏度]', '°': '[度]', '′': '[分]',
            '″': '[秒]', '‰': '[千分比]', '‱': '[萬分比]', '∞': '[無限]',
            '∅': '[空集]', '∈': '[屬於]', '∉': '[不屬於]', '∋': '[包含]',
            '∌': '[不包含]', '∏': '[連乘]', '∑': '[連加]', '√': '[根號]',
            '∛': '[立方根]', '∜': '[四次根]', '±': '[正負]', '∓': '[負正]',
            '×': '[乘]', '÷': '[除]', '∕': '[分數線]', '∗': '[星號]',
            '∘': '[複合]', '∙': '[點乘]', '⋅': '[點]', '⋆': '[星號]',
            '⋇': '[除號]', '⋈': '[連接]', '⋉': '[左連接]', '⋊': '[右連接]',
            '⋋': '[左反連接]', '⋌': '[右反連接]', '⋍': '[相似]', '⋎': '[或]',
            '⋏': '[且]', '⋐': '[包含於]', '⋑': '[包含]', '⋒': '[交集]',
            '⋓': '[聯集]', '⋔': '[垂直]', '⋕': '[平行]', '⋖': '[小於]',
            '⋗': '[大於]', '⋘': '[遠小於]', '⋙': '[遠大於]', '⋚': '[小於等於]',
            '⋛': '[大於等於]', '⋜': '[等於]', '⋝': '[不等於]', '⋞': '[小於等於]',
            '⋟': '[大於等於]', '⋠': '[不小於]', '⋡': '[不大於]', '⋢': '[不包含於]',
            '⋣': '[不包含]', '⋤': '[不包含於]', '⋥': '[不包含]', '⋦': '[小於]',
            '⋧': '[大於]', '⋨': '[小於]', '⋩': '[大於]', '⋪': '[不包含於]',
            '⋫': '[不包含]', '⋬': '[不包含於]', '⋭': '[不包含]', '⋮': '[垂直省略]',
            '⋯': '[水平省略]', '⋰': '[左上省略]', '⋱': '[右下省略]', '⋲': '[包含於]',
            '⋳': '[包含]', '⋴': '[包含於]', '⋵': '[包含]', '⋶': '[包含於]',
            '⋷': '[包含]', '⋸': '[包含於]', '⋹': '[包含]', '⋺': '[包含於]',
            '⋻': '[包含]', '⋼': '[包含於]', '⋽': '[包含]', '⋾': '[包含於]',
            '⋿': '[包含]'
        }
    
    def clean_text(self, text: str, remove_emojis: bool = True, 
                   normalize_unicode: bool = True, 
                   remove_special_chars: bool = False) -> str:
        """
        清理文本
        
        Args:
            text: 原始文本
            remove_emojis: 是否移除表情符號
            normalize_unicode: 是否標準化 Unicode
            remove_special_chars: 是否移除特殊字符
            
        Returns:
            清理後的文本
        """
        if not text:
            return ""
        
        cleaned_text = text
        
        # 1. Unicode 標準化
        if normalize_unicode:
            cleaned_text = unicodedata.normalize('NFKC', cleaned_text)
        
        # 2. 處理表情符號
        if remove_emojis:
            cleaned_text = self._replace_emojis(cleaned_text)
        
        # 3. 處理特殊字符
        if remove_special_chars:
            cleaned_text = self._replace_special_chars(cleaned_text)
        
        # 4. 移除多餘空白
        cleaned_text = re.sub(r'\s+', ' ', cleaned_text).strip()
        
        return cleaned_text
    
    def _replace_emojis(self, text: str) -> str:
        """替換表情符號"""
        for emoji, replacement in self.emoji_mapping.items():
            text = text.replace(emoji, replacement)
        
        # 移除其他表情符號（使用正則表達式）
        text = re.sub(r'[\U0001F600-\U0001F64F]', '[表情]', text)  # 表情
        text = re.sub(r'[\U0001F300-\U0001F5FF]', '[符號]', text)  # 符號
        text = re.sub(r'[\U0001F680-\U0001F6FF]', '[交通]', text)  # 交通
        text = re.sub(r'[\U0001F1E0-\U0001F1FF]', '[國旗]', text)  # 國旗
        text = re.sub(r'[\U00002600-\U000027BF]', '[符號]', text)  # 符號
        text = re.sub(r'[\U0001F900-\U0001F9FF]', '[符號]', text)  # 符號
        
        return text
    
    def _replace_special_chars(self, text: str) -> str:
        """替換特殊字符"""
        for char, replacement in self.special_char_mapping.items():
            text = text.replace(char, replacement)
        
        return text
    
    def normalize_title(self, title: str) -> str:
        """
        標準化標題，用於資料庫匹配
        
        Args:
            title: 原始標題
            
        Returns:
            標準化後的標題
        """
        if not title:
            return ""
        
        # 1. 基本清理
        normalized = self.clean_text(title, remove_emojis=True, normalize_unicode=True)
        
        # 2. 移除標點符號（保留中文標點）
        normalized = re.sub(r'[^\u4e00-\u9fff\w\s]', '', normalized)
        
        # 3. 轉換為小寫
        normalized = normalized.lower()
        
        # 4. 移除多餘空白
        normalized = re.sub(r'\s+', ' ', normalized).strip()
        
        return normalized
    
    def create_search_variants(self, title: str) -> List[str]:
        """
        創建標題的搜尋變體
        
        Args:
            title: 原始標題
            
        Returns:
            搜尋變體列表
        """
        variants = []
        
        if not title:
            return variants
        
        # 1. 原始標題
        variants.append(title)
        
        # 2. 清理後的標題
        cleaned = self.clean_text(title, remove_emojis=True, normalize_unicode=True)
        if cleaned != title:
            variants.append(cleaned)
        
        # 3. 標準化標題
        normalized = self.normalize_title(title)
        if normalized != title and normalized not in variants:
            variants.append(normalized)
        
        # 4. 移除表情符號但保留其他字符
        emoji_removed = self.clean_text(title, remove_emojis=True, normalize_unicode=False, remove_special_chars=False)
        if emoji_removed != title and emoji_removed not in variants:
            variants.append(emoji_removed)
        
        # 5. 只移除特殊字符
        special_removed = self.clean_text(title, remove_emojis=False, normalize_unicode=False, remove_special_chars=True)
        if special_removed != title and special_removed not in variants:
            variants.append(special_removed)
        
        return list(set(variants))  # 去重
    
    def is_similar_title(self, title1: str, title2: str, threshold: float = 0.8) -> bool:
        """
        檢查兩個標題是否相似
        
        Args:
            title1: 標題1
            title2: 標題2
            threshold: 相似度閾值
            
        Returns:
            是否相似
        """
        if not title1 or not title2:
            return False
        
        # 標準化兩個標題
        norm1 = self.normalize_title(title1)
        norm2 = self.normalize_title(title2)
        
        # 完全匹配
        if norm1 == norm2:
            return True
        
        # 計算相似度（簡單的字符重疊率）
        if len(norm1) > 0 and len(norm2) > 0:
            common_chars = set(norm1) & set(norm2)
            total_chars = set(norm1) | set(norm2)
            similarity = len(common_chars) / len(total_chars)
            return similarity >= threshold
        
        return False 