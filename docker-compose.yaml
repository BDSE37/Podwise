version: '3.8'

services:
  # Redis 快取服務 (本地啟動，用於快取)
  redis:
    image: docker.io/library/redis:7-alpine
    container_name: podwise-redis
    ports:
      - "6379:6379"
    networks:
      - podwise-network
    restart: unless-stopped

  # Ollama LLM 服務
  ollama:
    image: docker.io/ollama/ollama:latest
    container_name: podwise-ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - podwise-network
    restart: unless-stopped

  # LLM 統一服務
  llm-service:
    build:
      context: ./backend/llm
      dockerfile: Dockerfile
    container_name: podwise-llm
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    ports:
      - "8004:8004"
    volumes:
      - ./backend/llm/models:/app/models
      - llm_logs:/app/logs
    networks:
      - podwise-network
    depends_on:
      - ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # TTS 服務
  tts-service:
    build:
      context: ./backend/tts
      dockerfile: Dockerfile
    container_name: podwise-tts
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - AUDIO_INPUT_DIR=/app/audio/input
      - AUDIO_OUTPUT_DIR=/app/audio/output
    ports:
      - "8002:8002"
    volumes:
      - tts_audio:/app/audio
      - tts_models:/app/models
    networks:
      - podwise-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # STT 服務
  stt-service:
    build:
      context: ./backend/stt
      dockerfile: Dockerfile
    container_name: podwise-stt
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - AUDIO_INPUT_DIR=/app/audio/input
      - AUDIO_OUTPUT_DIR=/app/audio/output
    ports:
      - "8001:8001"
    volumes:
      - stt_audio:/app/audio
      - stt_models:/app/models
    networks:
      - podwise-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # RAG Pipeline 服務
  rag-pipeline:
    build:
      context: ./backend/rag_pipeline
      dockerfile: Dockerfile
    container_name: podwise-rag
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      # K8s 服務連接配置
      - POSTGRES_HOST=10.233.50.117
      - POSTGRES_PORT=5432
      - POSTGRES_DB=podwise
      - POSTGRES_USER=bai
      - POSTGRES_PASSWORD=111111
      - MONGODB_URI=mongodb://192.168.32.86:30017/podwise
      - MONGODB_DATABASE=podwise
      - MONGODB_COLLECTION=conversations
      - MINIO_HOST=192.168.32.66
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      # 本地服務連接配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MILVUS_HOST=192.168.32.86
      - MILVUS_PORT=19530
      - LLM_HOST=llm-service
      - LLM_PORT=8004
      - TTS_HOST=tts-service
      - TTS_PORT=8002
      - STT_HOST=stt-service
      - STT_PORT=8001
    ports:
      - "8005:8004"
    volumes:
      - rag_data:/app/data
      - rag_cache:/app/cache
      - rag_logs:/app/logs
    networks:
      - podwise-network
    depends_on:
      - redis
      - llm-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s



  # 前端服務
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: podwise-frontend
    ports:
      - "80:80"
    networks:
      - podwise-network
    depends_on:
      - rag-pipeline
    restart: unless-stopped

volumes:
  ollama_data:
    driver: local
  tts_audio:
    driver: local
  tts_models:
    driver: local
  stt_audio:
    driver: local
  stt_models:
    driver: local
  rag_data:
    driver: local
  rag_cache:
    driver: local
  rag_logs:
    driver: local
  llm_logs:
    driver: local


networks:
  podwise-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
